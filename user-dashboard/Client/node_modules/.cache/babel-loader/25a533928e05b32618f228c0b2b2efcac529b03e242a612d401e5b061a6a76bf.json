{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UserOffice\\\\Desktop\\\\dashboard_react\\\\user-dashboard\\\\Client\\\\src\\\\components\\\\LineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChart = ({\n  data\n}) => {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    // Set up the SVG element dimensions\n    const width = 600;\n    const height = 400;\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 30,\n      left: 40\n    };\n\n    // Remove any existing SVG elements\n    d3.select(svgRef.current).selectAll(\"*\").remove();\n\n    // Create the SVG element\n    const svg = d3.select(svgRef.current).attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n    // Set up the x and y scales\n    const x = d3.scaleTime().domain(d3.extent(data, d => new Date(d.date))).range([0, width - margin.left - margin.right]);\n    const y = d3.scaleLinear().domain([0, d3.max(data, d => d.value)]).range([height - margin.top - margin.bottom, 0]);\n\n    // Add the x and y axes\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height - margin.top - margin.bottom})`).call(d3.axisBottom(x));\n    svg.append(\"g\").call(d3.axisLeft(y));\n\n    // Add the line path\n    svg.append(\"path\").datum(data).attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", 1.5).attr(\"d\", d3.line().x(d => x(new Date(d.date))).y(d => y(d.value)));\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n_s(LineChart, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","LineChart","data","_s","svgRef","width","height","margin","top","right","bottom","left","select","current","selectAll","remove","svg","attr","append","x","scaleTime","domain","extent","d","Date","date","range","y","scaleLinear","max","value","call","axisBottom","axisLeft","datum","line","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/UserOffice/Desktop/dashboard_react/user-dashboard/Client/src/components/LineChart.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nconst LineChart = ({ data }) => {\r\n  const svgRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // Set up the SVG element dimensions\r\n    const width = 600;\r\n    const height = 400;\r\n    const margin = { top: 20, right: 30, bottom: 30, left: 40 };\r\n\r\n    // Remove any existing SVG elements\r\n    d3.select(svgRef.current).selectAll(\"*\").remove();\r\n\r\n    // Create the SVG element\r\n    const svg = d3\r\n      .select(svgRef.current)\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height)\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n    // Set up the x and y scales\r\n    const x = d3\r\n      .scaleTime()\r\n      .domain(d3.extent(data, (d) => new Date(d.date)))\r\n      .range([0, width - margin.left - margin.right]);\r\n\r\n    const y = d3\r\n      .scaleLinear()\r\n      .domain([0, d3.max(data, (d) => d.value)])\r\n      .range([height - margin.top - margin.bottom, 0]);\r\n\r\n    // Add the x and y axes\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(0,${height - margin.top - margin.bottom})`)\r\n      .call(d3.axisBottom(x));\r\n\r\n    svg.append(\"g\").call(d3.axisLeft(y));\r\n\r\n    // Add the line path\r\n    svg\r\n      .append(\"path\")\r\n      .datum(data)\r\n      .attr(\"fill\", \"none\")\r\n      .attr(\"stroke\", \"steelblue\")\r\n      .attr(\"stroke-width\", 1.5)\r\n      .attr(\r\n        \"d\",\r\n        d3\r\n          .line()\r\n          .x((d) => x(new Date(d.date)))\r\n          .y((d) => y(d.value))\r\n      );\r\n  }, [data]);\r\n\r\n  return <svg ref={svgRef}></svg>;\r\n};\r\n\r\nexport default LineChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}